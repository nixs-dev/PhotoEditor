# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'editorBrowser.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from PyQt5.QtGui import QPixmap
from backend import PhotoEditorBackEnd as PEback

class Ui_EditorWindow(object):
    addColorInterator = 0
    row = QtWidgets.QHBoxLayout()
    row.setSpacing(20)

    def finished(self):
        print('finished')

    def setColor(self, color):
        color_code = str(color)

        frame = QtWidgets.QWidget()
        frame.setFixedSize(15, 15)

        if len(color) == 4:
            frame.setStyleSheet("background-color: rgba" + color_code + "; border: 1px solid black")
        else:
            frame.setStyleSheet("background-color: rgb" + color_code + "; border: 1px solid black")

        frame.setToolTip(color_code)
        self.row.addWidget(frame)

        self.addColorInterator += 1

        if self.addColorInterator == 10:
            self.boxLayoutData.addLayout(self.row)
            self.row = QtWidgets.QHBoxLayout()
            self.row.setSpacing(20)
            self.addColorInterator = 0


    def discoverAllColors(self):
        colorFounder = PEback(self.image)
        colorFounder.colorFound.connect(self.setColor)
        colorFounder.finished.connect(self.finished)
        colorFounder.start()
        colorFounder.exec()

    def setupUi(self, EditorWindow, imagePath):
        self.image = imagePath

        EditorWindow.setObjectName("EditorWindow")
        EditorWindow.resize(911, 600)
        self.centralwidget = QtWidgets.QWidget(EditorWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.selectedImage = QtWidgets.QGraphicsView(self.centralwidget)
        self.selectedImage.setGeometry(QtCore.QRect(10, 10, 501, 581))
        self.selectedImage.setObjectName("selectedImage")
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setGeometry(QtCore.QRect(540, 10, 361, 571))
        self.scrollArea.setStyleSheet("background-color: rgb(255, 255, 255)")
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.scrollArea.setObjectName("scrollArea")
        self.colorsFound = QtWidgets.QFrame()
        self.colorsFound.setGeometry(QtCore.QRect(0, 0, 359, 569))
        self.colorsFound.setObjectName("colorsFound")
        self.boxLayoutData = QtWidgets.QVBoxLayout(self.colorsFound)
        self.scrollArea.setWidget(self.colorsFound)

        self.boxMainLayout = QtWidgets.QHBoxLayout()
        self.boxMainLayout.addWidget(self.scrollArea)
        
        EditorWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(EditorWindow)
        QtCore.QMetaObject.connectSlotsByName(EditorWindow)

        scene = QtWidgets.QGraphicsScene()
        pixmap = QPixmap(imagePath)
        item = QtWidgets.QGraphicsPixmapItem(pixmap)
        scene.addItem(item)
        self.selectedImage.setScene(scene)

        self.discoverAllColors()

    def retranslateUi(self, EditorWindow):
        _translate = QtCore.QCoreApplication.translate
        EditorWindow.setWindowTitle(_translate("EditorWindow", "EditorWindow"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    EditorWindow = QtWidgets.QEditorWindow()
    ui = Ui_EditorWindow()
    ui.setupUi(EditorWindow)
    EditorWindow.show()
    sys.exit(app.exec_())
